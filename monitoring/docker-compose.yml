networks:
  default_network:
    external: true

volumes:
  prometheus_data:
  grafana_data:
  portainer_data:

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    networks:
      default_network:
        ipv4_address: 10.0.0.7
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      default_network:
        ipv4_address: 10.0.0.8
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      default_network:
        ipv4_address: 10.0.0.9
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GRAFANA_DOMAIN
      - GF_SERVER_ROOT_URL=https://${GRAFANA_DOMAIN}
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGNUP=true
      - GF_AUTH_GENERIC_OAUTH_NAME=authentik
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://${OAUTH_DOMAIN}/application/o/authorize/
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://${OAUTH_DOMAIN}/application/o/token/
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://${OAUTH_DOMAIN}/application/o/userinfo/
      - GF_AUTH_SIGNOUT_REDIRECT_URL=https://${OAUTH_DOMAIN}/application/o/grafana/end-session/
      # Optionally enable auto-login (bypasses Grafana login screen)
      - GF_AUTH_OAUTH_AUTO_LOGIN=true
      # Optionally map user groups to Grafana roles
      - GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH=contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'
    healthcheck:
      test: [ "CMD", "curl", "https://${GRAFANA_DOMAIN}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    networks:
      default_network:
        ipv4_address: 10.0.0.10
    privileged: true
    restart: unless-stopped
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=15s"

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    networks:
      default_network:
        ipv4_address: 10.0.0.11
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
